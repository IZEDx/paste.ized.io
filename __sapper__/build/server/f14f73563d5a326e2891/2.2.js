exports.ids=[2],exports.modules={174:function(e,t,r){"use strict";r.r(t);var s=r(83);s.b.register({id:"http-error"}),s.b.setMonarchTokensProvider("http-error",{tokenizer:{root:[[/[0-9][0-9][0-9]\n*/,"http-error-code"],[/.*/,"http-error-message"]]}}),s.a.defineTheme("vs-dark-with-errors",{base:"vs-dark",inherit:!0,colors:{},rules:[{token:"http-error-code",foreground:"ff0000",fontStyle:"bold underline"},{token:"http-error-message",foreground:"D3D3D3"}]}),r.d(t,"Editor",(function(){return i})),r(116);class i{constructor(e,t={},r=(e=>{})){this.el=e,this.overrides=t,this.initFunc=r,this.changeFunc=e=>{},this.init()}init(){this.monaco=s.a.create(this.el,this.overrides),this.monaco.onDidChangeModelContent(()=>{this.overrides.value=this.value,this.changeFunc(this.value)}),this.initFunc(this.monaco)}refresh(){this.monaco.dispose(),this.init()}onInit(e){this.initFunc=e}onChange(e){this.changeFunc=e}static getLanguages(){return s.b.getLanguages()}set value(e){this.monaco.setValue(e)}get value(){return this.monaco.getValue()}get language(){return this.overrides.language}set language(e){this.overrides.language=e,this.refresh()}set theme(e){this.overrides.theme=e,this.refresh()}get theme(){return this.overrides.theme}}}};